#include <iostream>
#include <vector>

std::vector<std::vector<int>> vec;
std::vector<int> used;

int dfs(int v) {
  used[v] = true;
  if (vec[v].size() == 1) {
    return 1;
  }
  int cnt = 0;
  for (auto to : vec[v]) {
    if (!used[to]) {
      cnt += dfs(to);
    }
  }
  return cnt;
}

int main() {
  int n;
  std::cin >> n;
  n += 1;
  vec = std::vector<std::vector<int>>(n);
  used = std::vector<int>(n, 0);
  for (int i = 1; i < n-1; ++i) {
    int from, to;
    std::cin >> from >> to;
    vec[from].push_back(to);
    vec[to].push_back(from);
  }

  std::cout << dfs(1);
}
