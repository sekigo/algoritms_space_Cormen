#include <algorithm>
#include <iostream>
#include <queue>
#include <vector>

const int inf = 1e9;

int main() {
  int n = 0, m = 0;
  std::cin >> n >> m;
  std::vector<std::vector<int>> g(n);
  for (size_t i = 0; i < m; ++i) {
    for (size_t j = 0; j<n ;++j){
      int f = 0, t = 0;
      std::cin >> f >> t;
      g[f].push_back(t);
      g[t].push_back(f);
    }
  }
  std::vector<int> p(n, -1), dist(n,inf);
  std::vector<int> rcur, r1;
  rcur.push_back(0);
  dist[0] = 0;
  while (!rcur.empty() || !r1.empty()) {
    if (rcur.empty()) {
      rcur = r1;
      r1 = std::vector<int>();
    }
    int cur = rcur.back();
    rcur.pop_back();
    for (auto to : g[cur]) {
      if (dist[cur] + 1 < dist[to]) {
        dist[to] = dist[cur] + 1;
        p[to] = cur;
        r1.push_back(to);
      }
    }
  }
}
