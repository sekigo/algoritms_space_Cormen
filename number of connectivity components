#include <iostream>
#include <vector>

using namespace std; // for less code

void dfs(const vector<vector<int>> &g, vector<int> &used, int v) {
  used[v] = true;
  for (auto to : g[v]) {
    if (!used[to]) {
      dfs(g, used, to);
    }
  }
}

int main() {
  int n, m;
  cin >> n >> m;
  vector<vector<int>> gr(n + 1);
  for (int i = 0; i < m; ++i) {
    int f, t;
    cin >> f >> t;
    gr[f].push_back(t);
    gr[t].push_back(f);
  }
  vector<int> used(n, 0);
  int count = 0;

  for (int i = 0; i < n; ++i) {
    if (!used[i]) {
      dfs(gr, used, i);
      count++;
    }
  }
  cout << count;
  // компаненты связности
}
