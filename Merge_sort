#include <iostream>

void Merge(int a[], int left, int mid, int right) {
  int num1 = mid - left + 1;
  int num2 = right - mid;
  int* L = new int[num1];
  int* R = new int[num2];
  for (int i = 0; i < num1; ++i) {
    L[i] = a[left + i];
  }
  for (int i = 0; i < num2; ++i) {
    R[i] = a[mid + i + 1];
  }
  int i = 0, j = 0, k = left;
  while (i < num1 && j < num2) {
    if (L[i] <= R[j]) {
      a[k] = L[i];
      i++;
    } else {
      a[k] = R[j];
      j++;
    }
    k++;
  }
  while (i < num1) {
    a[k] = L[i];
    i++;
    k++;
  }

  while (j < num2) {
    a[k] = R[j];
    j++;
    k++;
  }
}

void Sort_Merge(int* a, int left, int right) {
  if (left >= right) {
    return;
  }
  int mid = (right + left) / 2;
  Sort_Merge(a, left, mid);
  Sort_Merge(a, mid + 1, right);
  Merge(a, left, mid, right);
}
